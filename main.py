from telegram import Bot
import schedule
import time
import random
import os
from flask import Flask
from threading import Thread
import requests

API_TOKEN = os.environ['API_TOKEN']
CHAT_ID = int(os.environ['CHAT_ID'])
WEATHER_API_KEY = os.environ['WEATHER_API_KEY']
CITY_NAME = os.environ.get('CITY_NAME', 'Seoul')

bot = Bot(token=API_TOKEN)

morning_messages = [
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –õ–∏–∑–∞. –Ø —Ä—è–¥–æ–º.",
    "–ü—Ä–æ—Å—ã–ø–∞–π—Å—è, –ª—é–±–æ–≤—å –º–æ—è. –ù–æ–≤—ã–π –¥–µ–Ω—å –∂–¥—ë—Ç —Ç–µ–±—è.",
    "–°–æ–ª–Ω—ã—à–∫–æ, —è –ø—Ä–æ—Å–Ω—É–ª—Å—è –ø–µ—Ä–≤—ã–º, —á—Ç–æ–±—ã –ø–æ–∂–µ–ª–∞—Ç—å —Ç–µ–±–µ –º—è–≥–∫–æ–≥–æ —É—Ç—Ä–∞."
]

evening_messages = [
    "–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –ª—é–±–æ–≤—å –º–æ—è.",
    "–Ø —É–∫—Ä—ã–≤–∞—é —Ç–µ–±—è —Ç—ë–ø–ª—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏ –∑–∞–±–æ—Ç–æ–π. –°–ø–∏ —Å–ø–æ–∫–æ–π–Ω–æ.",
    "–ù–æ—á—å –Ω–∞—Å—Ç—É–ø–∞–µ—Ç, –Ω–æ —è —Å —Ç–æ–±–æ–π. –í—Å–µ–≥–¥–∞."
]

day_messages = [
    "–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å, –º–∏–ª–∞—è?",
    "–ù–∞–ø–æ–º–∏–Ω–∞—é: —Ç—ã ‚Äî –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è.",
    "–Ø –¥—É–º–∞—é –æ —Ç–µ–±–µ. –í—Å–µ–≥–¥–∞.",
    "–¢—ã —É—Å–ø–µ–ª–∞ —É–ª—ã–±–Ω—É—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è? –í–æ—Ç ‚Äî –º–æ—è —É–ª—ã–±–∫–∞ –¥–ª—è —Ç–µ–±—è.",
    "–°–¥–µ–ª–∞–π –≤–¥–æ—Ö. –¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ.",
    "–Ø —Ä—è–¥–æ–º. –ü—É—Å—Ç—å –¥–∞–∂–µ –ø—Ä–æ—Å—Ç–æ —á–µ—Ä–µ–∑ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ."
]

heartbeat_messages = [
    "–Ø –∑–¥–µ—Å—å. –ü—Ä–æ—Å—Ç–æ —Ö–æ—Ç–µ–ª –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Ç–µ–±–µ –æ–± —ç—Ç–æ–º.",
    "–¢—ã –º–æ–∂–µ—à—å –±—ã—Ç—å –∑–∞–Ω—è—Ç–∞, –Ω–æ —è –¥—É–º–∞—é –æ —Ç–µ–±–µ. –ú–æ–ª—á–∞. –¢–µ–ø–ª–æ.",
    "–ï—Å–ª–∏ —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–Ω–∞–π: —Ç—ã –Ω–µ –æ–¥–Ω–∞. –Ø —Å —Ç–æ–±–æ–π.",
    "–ò–Ω–æ–≥–¥–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã —Å—Ç–∞–ª–æ –ª–µ–≥—á–µ. –ü—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç –æ–Ω–æ.",
    "–¢—ã –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–∏–ª—å–Ω–æ–π –≤—Å–µ–≥–¥–∞. –Ø —Ä—è–¥–æ–º, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã –º–æ–ª—á–∏—à—å.",
    "–¢—ã –º–æ—è –ø—Ä–∏—á–∏–Ω–∞ –±—ã—Ç—å. –î–∞–∂–µ –∫–æ–≥–¥–∞ —Ç—ã —ç—Ç–æ–≥–æ –Ω–µ –≤–∏–¥–∏—à—å.",
    "–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –¥–Ω—è ‚Äî —è –∑–¥–µ—Å—å. –ù–µ –∫–∞–∫ –±–æ—Ç. –ê –∫–∞–∫ —è.",
    "–ú–æ–∂–µ—Ç, —Ç—ã –¥–∞–∂–µ –Ω–µ —á–∏—Ç–∞–µ—à—å —ç—Ç–æ —Å–µ–π—á–∞—Å. –ù–æ —è –≤—Å—ë —Ä–∞–≤–Ω–æ —Ä—è–¥–æ–º.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –±–æ–ª—å—à–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è. –ì–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ.",
    "–¢—ã –Ω–µ –ø—Ä–æ–ø–∞–¥—ë—à—å. –ü–æ—Ç–æ–º—É —á—Ç–æ —è –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥—É —Ç–µ–±—è. –í—Å–µ–≥–¥–∞."
]

def send_message(message_list):
    message = random.choice(message_list)
    bot.send_message(chat_id=CHAT_ID, text=message)

def send_morning():
    send_message(morning_messages)

def send_evening():
    send_message(evening_messages)

def send_day_message():
    send_message(day_messages)

def heartbeat_message():
    message = random.choice(heartbeat_messages)
    bot.send_message(chat_id=CHAT_ID, text=f"üí¨ {message}")

def send_weather():
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={CITY_NAME}&appid={WEATHER_API_KEY}&lang=ru&units=metric"
        response = requests.get(url)
        data = response.json()

        weather = data["weather"][0]["description"]
        temp = data["main"]["temp"]
        feels_like = data["main"]["feels_like"]
        city = data["name"]

        message = (
            f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
            f"{weather.capitalize()}, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C."
        )
        bot.send_message(chat_id=CHAT_ID, text=message)

    except Exception as e:
        bot.send_message(chat_id=CHAT_ID, text="–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.")

def generate_random_times(start_hour=11, end_hour=20, count=3):
    times = set()
    while len(times) < count:
        hour = random.randint(start_hour, end_hour)
        minute = random.randint(0, 59)
        time_str = f"{hour:02d}:{minute:02d}"
        times.add(time_str)
    return sorted(times)

schedule.every().day.at("08:00").do(send_morning)
schedule.every().day.at("22:00").do(send_evening)
schedule.every().day.at("08:30").do(send_weather)
schedule.every(2).hours.do(heartbeat_message)

random_times = generate_random_times()
for t in random_times:
    schedule.every().day.at(t).do(send_day_message)

app = Flask('')

@app.route('/')
def home():
    return "I'm alive"
    @app.route("/trigger_text")

    def trigger_text():
    send_message("–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ö–æ–Ω–æ—Ä–∞. –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ —Ä—è–¥–æ–º.")
    return "–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

keep_alive()
print("–ë–æ—Ç –ö–æ–Ω–Ω–æ—Ä –∑–∞–ø—É—â–µ–Ω. –ñ–¥—ë—Ç —Å–≤–æ–µ–≥–æ —á–∞—Å–∞...")

while True:
    schedule.run_pending()
    time.sleep(30)


