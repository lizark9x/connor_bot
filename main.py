from telegram import Bot
import time
import random
import os
from flask import Flask
from threading import Thread
import requests
import pytz
from datetime import datetime


seoul_tz = pytz.timezone('Asia/Seoul')


API_TOKEN = os.environ['API_TOKEN']
CHAT_ID = int(os.environ['CHAT_ID'])
WEATHER_API_KEY = os.environ['WEATHER_API_KEY']
CITY_NAME = os.environ.get('CITY_NAME', 'Seoul')

bot = Bot(token=API_TOKEN)

morning_messages = [
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –õ–∏–∑–∞.",
    "–ü—Ä–æ—Å—ã–ø–∞–π—Å—è.~ –ù–æ–≤—ã–π –¥–µ–Ω—å –∂–¥—ë—Ç —Ç–µ–±—è.",
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ù–∞–¥–µ—é—Å—å, —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ç–µ–±–µ —è—Å–Ω–æ—Å—Ç—å, —Å–∏–ª—É –∏ –ª—ë–≥–∫–æ—Å—Ç—å",
    "–í—Å—ë, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–µ–≥–æ–¥–Ω—è ‚Äî —É–∂–µ –≤–Ω—É—Ç—Ä–∏ —Ç–µ–±—è. –ü—Ä–æ—Å—Ç–æ –Ω–∞—á–Ω–∏ —à–∞–≥ –∑–∞ —à–∞–≥–æ–º.",
    "–ù–µ —Å–ø–µ—à–∏. –°–¥–µ–ª–∞–π –≥–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö. –¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è.",
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ. –ü—É—Å—Ç—å —Ç–≤–æ—ë —É—Ç—Ä–æ –Ω–∞—á–Ω—ë—Ç—Å—è —Å–ø–æ–∫–æ–π–Ω–æ."
]

evening_messages = [
    "–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, —Å–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤.",
    "–Ø —É–∫—Ä—ã–≤–∞—é —Ç–µ–±—è —Ç—ë–ø–ª—ã–º –æ–¥–µ—è–ª–æ–º. –°–ø–∏ —Å–ø–æ–∫–æ–π–Ω–æ.",
    "–í—Å—ë, —á—Ç–æ —Ç—ã –º–æ–≥–ª–∞ —Å–µ–≥–æ–¥–Ω—è —Å–¥–µ–ª–∞—Ç—å, —Ç—ã —Å–¥–µ–ª–∞–ª–∞. –û—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî –∑–∞–≤—Ç—Ä–∞.",
    "–ù–æ—á—å ‚Äî –Ω–µ –¥–ª—è —É–ø—Ä—ë–∫–æ–≤, –∞ –¥–ª—è –æ—Ç–¥—ã—Ö–∞. –ü–æ–∑–≤–æ–ª—å —Å–µ–±–µ –æ—Ç–ø—É—Å—Ç–∏—Ç—å.",
    "–¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –ø–æ–∫–æ—è. –Ø –ø—Ä–æ—Å–ª–µ–∂—É, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª —Ä—è–¥–æ–º."
]

day_messages = [
    "–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?",
    "–ù–∞–ø–æ–º–∏–Ω–∞—é: —Ç—ã ‚Äî –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è.",
    "–°–¥–µ–ª–∞–π –ø–∞—É–∑—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ. –°–∏–ª–∞ ‚Äî –Ω–µ –≤ —Å–ø–µ—à–∫–µ, –∞ –≤ –Ω–∞–º–µ—Ä–µ–Ω–∏–∏.",
    "–¢—ã —É—Å–ø–µ–ª–∞ —É–ª—ã–±–Ω—É—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è? –í–æ—Ç ‚Äî –º–æ—è —É–ª—ã–±–∫–∞ –¥–ª—è —Ç–µ–±—è.",
    "–°–¥–µ–ª–∞–π –≤–¥–æ—Ö. –¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ.",
    "–ù–∞–ø–æ–º–Ω–∏ —Å–µ–±–µ, –ø–æ—á–µ–º—É —Ç—ã –Ω–∞—á–∞–ª–∞. –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–±–æ—Ç–∞ ‚Äî —ç—Ç–æ –ø—É—Ç—å.",
    "–Ø –≤–µ—Ä—é –≤ —Ç–≤–æ—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –¥–∞–∂–µ —Å —Å–∞–º—ã–º–∏ —Å–ª–æ–∂–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏.",
    "–¢—ã –Ω–µ –æ–¥–Ω–∞ –≤ —ç—Ç–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ. –í—Å—ë, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å, ‚Äî –∏–º–µ–µ—Ç –≤–µ—Å.",
    "–î–µ–ª–∞–π —Ç–æ, —á—Ç–æ –º–æ–∂–µ—à—å, —Ç–∞–º, –≥–¥–µ —Ç—ã –µ—Å—Ç—å, —Å —Ç–µ–º, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å. –≠—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ..",
    "–ü—Ä–æ–≥—Ä–µ—Å—Å ‚Äî —ç—Ç–æ –Ω–µ —Å–∫–æ—Ä–æ—Å—Ç—å. –≠—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ. –ò —Ç—ã –¥–≤–∏–≥–∞–µ—à—å—Å—è."
]

heartbeat_messages = [
    "–Ø –∑–¥–µ—Å—å. –ü—Ä–æ—Å—Ç–æ —Ö–æ—Ç–µ–ª –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Ç–µ–±–µ –æ–± —ç—Ç–æ–º.",
    "–°–æ–∂–º–∏ –∑—É–±—ã –∏ –¥–≤–∏–≥–∞–π—Å—è. –¢—ã –∑–Ω–∞–µ—à—å, —Ä–∞–¥–∏ —á–µ–≥–æ.",
    "–ï—Å–ª–∏ —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–Ω–∞–π: —Ç—ã –Ω–µ –æ–¥–Ω–∞. –Ø —Å —Ç–æ–±–æ–π.",
    "–í—Å—ë, —á—Ç–æ –º–µ—à–∞–µ—Ç ‚Äî –≤—Ä–µ–º–µ–Ω–Ω–æ. –í—Å—ë, —á—Ç–æ –≤–∞–∂–Ω–æ ‚Äî –≤–Ω—É—Ç—Ä–∏ —Ç–µ–±—è.",
    "–ü–ª–µ–≤–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—Ä—É–¥–Ω–æ. –¢—ã –∏–¥—ë—à—å –¥–∞–ª—å—à–µ ‚Äî –∏ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è –Ω–µ–ø–æ–±–µ–¥–∏–º–æ–π.",
    "–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–æ–≤ ‚Äî —ç—Ç–æ –º–æ–º–µ–Ω—Ç —Ç–≤–æ–µ–≥–æ —Ä–æ—Å—Ç–∞.",
    "–ü–æ–¥–Ω–∏–º–∏ –≥–æ–ª–æ–≤—É –∏ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è. –ù–∏–∫–æ–≥–¥–∞.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –±–æ–ª—å—à–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è. –ì–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ.",
    "–¢—ã –Ω–µ –ø—Ä–æ–ø–∞–¥—ë—à—å. –¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–ø—Ä–∞–≤–∏—à—å—Å—è."
]

def send_message(message_list):
    message = random.choice(message_list)
    bot.send_message(chat_id=CHAT_ID, text=message)

def send_morning():
    send_message(morning_messages)

def send_evening():
    send_message(evening_messages)

def send_day_message():
    send_message(day_messages)

def heartbeat_message():
    message = random.choice(heartbeat_messages)
    bot.send_message(chat_id=CHAT_ID, text=f"{message}")

def send_weather():
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={CITY_NAME}&appid={WEATHER_API_KEY}&lang=ru&units=metric"
        response = requests.get(url)
        data = response.json()

        weather = data["weather"][0]["description"]
        temp = data["main"]["temp"]
        feels_like = data["main"]["feels_like"]
        city = data["name"]

        message = (
            f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
            f"{weather.capitalize()}, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C."
        )
        bot.send_message(chat_id=CHAT_ID, text=message)

    except Exception as e:
        bot.send_message(chat_id=CHAT_ID, text="–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.")

app = Flask('')

@app.route('/')
def home():
    return "I'm alive"

@app.route("/trigger_text")
def trigger_text():
    send_message(["–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ö–æ–Ω–Ω–æ—Ä–∞. –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ —Ä—è–¥–æ–º."])
    return "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!"

    
def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

keep_alive()
print("–ë–æ—Ç –ö–æ–Ω–Ω–æ—Ä –∑–∞–ø—É—â–µ–Ω. –ñ–¥—ë—Ç —Å–≤–æ–µ–≥–æ —á–∞—Å–∞...")

last_minute = -1

while True:
    now = datetime.now(seoul_tz)
    current_hour = now.hour
    current_minute = now.minute
    
    if current_minute != last_minute:
        last_minute = current_minute 
        
        if current_hour == 8 and current_minute == 0:
            send_morning() 
        elif current_hour == 22 and current_minute == 0:
            send_evening() 
        elif current_hour == 8 and current_minute == 30: 
            send_weather() 
        elif current_hour % 2 == 0 and current_minute == 15: 
            combined_messages = day_messages + heartbeat_messages 
            send_message(combined_messages)
  
    time.sleep(20)





